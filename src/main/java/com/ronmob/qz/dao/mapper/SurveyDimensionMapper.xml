<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ronmob.qz.dao.SurveyDimensionMapper">
  <resultMap id="BaseResultMap" type="com.ronmob.qz.model.SurveyDimension">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="survey_id" jdbcType="INTEGER" property="surveyId" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="dimension_name" jdbcType="VARCHAR" property="dimensionName" />
    <result column="auto_calculate_type" jdbcType="TINYINT" property="autoCalculateType" />
    <result column="proxy_sub_dimension_id" jdbcType="INTEGER" property="proxySubDimensionId" />
    <result column="params" jdbcType="VARCHAR" property="params" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ronmob.qz.model.SurveyDimension">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_id, survey_id, seq, dimension_name, auto_calculate_type, proxy_sub_dimension_id, 
    params
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.ronmob.qz.model.SurveyDimensionExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from survey_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.ronmob.qz.model.SurveyDimensionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from survey_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from survey_dimension
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from survey_dimension
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ronmob.qz.model.SurveyDimensionExample">
    delete from survey_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ronmob.qz.model.SurveyDimension">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into survey_dimension (parent_id, survey_id, seq, 
      dimension_name, auto_calculate_type, proxy_sub_dimension_id, 
      params, description)
    values (#{parentId,jdbcType=INTEGER}, #{surveyId,jdbcType=INTEGER}, #{seq,jdbcType=INTEGER}, 
      #{dimensionName,jdbcType=VARCHAR}, #{autoCalculateType,jdbcType=TINYINT}, #{proxySubDimensionId,jdbcType=INTEGER}, 
      #{params,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ronmob.qz.model.SurveyDimension">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into survey_dimension
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="surveyId != null">
        survey_id,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="dimensionName != null">
        dimension_name,
      </if>
      <if test="autoCalculateType != null">
        auto_calculate_type,
      </if>
      <if test="proxySubDimensionId != null">
        proxy_sub_dimension_id,
      </if>
      <if test="params != null">
        params,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="surveyId != null">
        #{surveyId,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="dimensionName != null">
        #{dimensionName,jdbcType=VARCHAR},
      </if>
      <if test="autoCalculateType != null">
        #{autoCalculateType,jdbcType=TINYINT},
      </if>
      <if test="proxySubDimensionId != null">
        #{proxySubDimensionId,jdbcType=INTEGER},
      </if>
      <if test="params != null">
        #{params,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ronmob.qz.model.SurveyDimensionExample" resultType="java.lang.Long">
    select count(*) from survey_dimension
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update survey_dimension
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.surveyId != null">
        survey_id = #{record.surveyId,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null">
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.dimensionName != null">
        dimension_name = #{record.dimensionName,jdbcType=VARCHAR},
      </if>
      <if test="record.autoCalculateType != null">
        auto_calculate_type = #{record.autoCalculateType,jdbcType=TINYINT},
      </if>
      <if test="record.proxySubDimensionId != null">
        proxy_sub_dimension_id = #{record.proxySubDimensionId,jdbcType=INTEGER},
      </if>
      <if test="record.params != null">
        params = #{record.params,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update survey_dimension
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      survey_id = #{record.surveyId,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      dimension_name = #{record.dimensionName,jdbcType=VARCHAR},
      auto_calculate_type = #{record.autoCalculateType,jdbcType=TINYINT},
      proxy_sub_dimension_id = #{record.proxySubDimensionId,jdbcType=INTEGER},
      params = #{record.params,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update survey_dimension
    set id = #{record.id,jdbcType=INTEGER},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      survey_id = #{record.surveyId,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      dimension_name = #{record.dimensionName,jdbcType=VARCHAR},
      auto_calculate_type = #{record.autoCalculateType,jdbcType=TINYINT},
      proxy_sub_dimension_id = #{record.proxySubDimensionId,jdbcType=INTEGER},
      params = #{record.params,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ronmob.qz.model.SurveyDimension">
    update survey_dimension
    <set>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="surveyId != null">
        survey_id = #{surveyId,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="dimensionName != null">
        dimension_name = #{dimensionName,jdbcType=VARCHAR},
      </if>
      <if test="autoCalculateType != null">
        auto_calculate_type = #{autoCalculateType,jdbcType=TINYINT},
      </if>
      <if test="proxySubDimensionId != null">
        proxy_sub_dimension_id = #{proxySubDimensionId,jdbcType=INTEGER},
      </if>
      <if test="params != null">
        params = #{params,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ronmob.qz.model.SurveyDimension">
    update survey_dimension
    set parent_id = #{parentId,jdbcType=INTEGER},
      survey_id = #{surveyId,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      dimension_name = #{dimensionName,jdbcType=VARCHAR},
      auto_calculate_type = #{autoCalculateType,jdbcType=TINYINT},
      proxy_sub_dimension_id = #{proxySubDimensionId,jdbcType=INTEGER},
      params = #{params,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ronmob.qz.model.SurveyDimension">
    update survey_dimension
    set parent_id = #{parentId,jdbcType=INTEGER},
      survey_id = #{surveyId,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      dimension_name = #{dimensionName,jdbcType=VARCHAR},
      auto_calculate_type = #{autoCalculateType,jdbcType=TINYINT},
      proxy_sub_dimension_id = #{proxySubDimensionId,jdbcType=INTEGER},
      params = #{params,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>