<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ronmob.qz.dao.SurveyQuestionMapper">
    <resultMap id="BaseResultMap" type="com.ronmob.qz.model.SurveyQuestion">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="seq" jdbcType="INTEGER" property="seq"/>
        <result column="survey_id" jdbcType="INTEGER" property="surveyId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="sex" jdbcType="TINYINT" property="sex"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ronmob.qz.model.SurveyQuestion">
        <result column="question_content" jdbcType="LONGVARCHAR" property="questionContent"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, seq, survey_id, title, type, sex
  </sql>
    <sql id="Blob_Column_List">
    question_content
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.ronmob.qz.model.SurveyQuestionExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from survey_question
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByExample" parameterType="com.ronmob.qz.model.SurveyQuestionExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from survey_question
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from survey_question
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from survey_question
    where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.ronmob.qz.model.SurveyQuestionExample">
        delete from survey_question
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ronmob.qz.model.SurveyQuestion">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into survey_question (seq, survey_id, title,
        type, sex, question_content
        )
        values (#{seq,jdbcType=INTEGER}, #{surveyId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
        #{type,jdbcType=TINYINT}, #{sex,jdbcType=TINYINT}, #{questionContent,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ronmob.qz.model.SurveyQuestion">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into survey_question
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="seq != null">
                seq,
            </if>
            <if test="surveyId != null">
                survey_id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="sex != null">
                sex,
            </if>
            <if test="questionContent != null">
                question_content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="seq != null">
                #{seq,jdbcType=INTEGER},
            </if>
            <if test="surveyId != null">
                #{surveyId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=TINYINT},
            </if>
            <if test="questionContent != null">
                #{questionContent,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ronmob.qz.model.SurveyQuestionExample" resultType="java.lang.Long">
        select count(*) from survey_question
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update survey_question
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.seq != null">
                seq = #{record.seq,jdbcType=INTEGER},
            </if>
            <if test="record.surveyId != null">
                survey_id = #{record.surveyId,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null">
                type = #{record.type,jdbcType=TINYINT},
            </if>
            <if test="record.sex != null">
                sex = #{record.sex,jdbcType=TINYINT},
            </if>
            <if test="record.questionContent != null">
                question_content = #{record.questionContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update survey_question
        set id = #{record.id,jdbcType=INTEGER},
        seq = #{record.seq,jdbcType=INTEGER},
        survey_id = #{record.surveyId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=TINYINT},
        sex = #{record.sex,jdbcType=TINYINT},
        question_content = #{record.questionContent,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update survey_question
        set id = #{record.id,jdbcType=INTEGER},
        seq = #{record.seq,jdbcType=INTEGER},
        survey_id = #{record.surveyId,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=TINYINT},
        sex = #{record.sex,jdbcType=TINYINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ronmob.qz.model.SurveyQuestion">
        update survey_question
        <set>
            <if test="seq != null">
                seq = #{seq,jdbcType=INTEGER},
            </if>
            <if test="surveyId != null">
                survey_id = #{surveyId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="questionContent != null">
                question_content = #{questionContent,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ronmob.qz.model.SurveyQuestion">
    update survey_question
    set seq = #{seq,jdbcType=INTEGER},
      survey_id = #{surveyId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      sex = #{sex,jdbcType=TINYINT},
      question_content = #{questionContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.ronmob.qz.model.SurveyQuestion">
    update survey_question
    set seq = #{seq,jdbcType=INTEGER},
      survey_id = #{surveyId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      sex = #{sex,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>