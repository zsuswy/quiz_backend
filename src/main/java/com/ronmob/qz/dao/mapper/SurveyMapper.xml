<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ronmob.qz.dao.SurveyMapper">
    <resultMap id="BaseResultMap" type="com.ronmob.qz.model.Survey">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="class_id" jdbcType="INTEGER" property="classId"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="question_cnt" jdbcType="INTEGER" property="questionCnt"/>
        <result column="estimate_minutes" jdbcType="TINYINT" property="estimateMinutes"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="org_price" jdbcType="DECIMAL" property="orgPrice"/>
        <result column="image" jdbcType="VARCHAR" property="image"/>
        <result column="is_need_sex" jdbcType="TINYINT" property="isNeedSex"/>
        <result column="tested_cnt" jdbcType="INTEGER" property="testedCnt"/>
        <result column="result_template" jdbcType="VARCHAR" property="resultTemplate"/>
        <result column="is_hot" jdbcType="TINYINT" property="isHot"/>
        <result column="is_new" jdbcType="TINYINT" property="isNew"/>
        <result column="is_super" jdbcType="TINYINT" property="isSuper"/>
        <result column="result_template_param" jdbcType="VARCHAR" property="resultTemplateParam"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.ronmob.qz.model.Survey">
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, title, create_by, create_time, class_id, status, question_cnt, estimate_minutes, 
    price, org_price, image, is_need_sex, tested_cnt, result_template, is_hot, is_new, 
    is_super, result_template_param
  </sql>
    <sql id="Blob_Column_List">
    description
  </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.ronmob.qz.model.SurveyExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from survey
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByExample" parameterType="com.ronmob.qz.model.SurveyExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from survey
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from survey
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from survey
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.ronmob.qz.model.SurveyExample">
        delete from survey
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ronmob.qz.model.Survey">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into survey (title, create_by, create_time,
        class_id, status, question_cnt,
        estimate_minutes, price, org_price,
        image, is_need_sex, tested_cnt,
        result_template, is_hot, is_new,
        is_super, result_template_param, description
        )
        values (#{title,jdbcType=VARCHAR}, #{createBy,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP},
        #{classId,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, #{questionCnt,jdbcType=INTEGER},
        #{estimateMinutes,jdbcType=TINYINT}, #{price,jdbcType=DECIMAL}, #{orgPrice,jdbcType=DECIMAL},
        #{image,jdbcType=VARCHAR}, #{isNeedSex,jdbcType=TINYINT}, #{testedCnt,jdbcType=INTEGER},
        #{resultTemplate,jdbcType=VARCHAR}, #{isHot,jdbcType=TINYINT}, #{isNew,jdbcType=TINYINT},
        #{isSuper,jdbcType=TINYINT}, #{resultTemplateParam,jdbcType=VARCHAR}, #{description,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.ronmob.qz.model.Survey">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into survey
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">
                title,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="questionCnt != null">
                question_cnt,
            </if>
            <if test="estimateMinutes != null">
                estimate_minutes,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="orgPrice != null">
                org_price,
            </if>
            <if test="image != null">
                image,
            </if>
            <if test="isNeedSex != null">
                is_need_sex,
            </if>
            <if test="testedCnt != null">
                tested_cnt,
            </if>
            <if test="resultTemplate != null">
                result_template,
            </if>
            <if test="isHot != null">
                is_hot,
            </if>
            <if test="isNew != null">
                is_new,
            </if>
            <if test="isSuper != null">
                is_super,
            </if>
            <if test="resultTemplateParam != null">
                result_template_param,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="questionCnt != null">
                #{questionCnt,jdbcType=INTEGER},
            </if>
            <if test="estimateMinutes != null">
                #{estimateMinutes,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="orgPrice != null">
                #{orgPrice,jdbcType=DECIMAL},
            </if>
            <if test="image != null">
                #{image,jdbcType=VARCHAR},
            </if>
            <if test="isNeedSex != null">
                #{isNeedSex,jdbcType=TINYINT},
            </if>
            <if test="testedCnt != null">
                #{testedCnt,jdbcType=INTEGER},
            </if>
            <if test="resultTemplate != null">
                #{resultTemplate,jdbcType=VARCHAR},
            </if>
            <if test="isHot != null">
                #{isHot,jdbcType=TINYINT},
            </if>
            <if test="isNew != null">
                #{isNew,jdbcType=TINYINT},
            </if>
            <if test="isSuper != null">
                #{isSuper,jdbcType=TINYINT},
            </if>
            <if test="resultTemplateParam != null">
                #{resultTemplateParam,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ronmob.qz.model.SurveyExample" resultType="java.lang.Long">
        select count(*) from survey
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update survey
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.createBy != null">
                create_by = #{record.createBy,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.classId != null">
                class_id = #{record.classId,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=TINYINT},
            </if>
            <if test="record.questionCnt != null">
                question_cnt = #{record.questionCnt,jdbcType=INTEGER},
            </if>
            <if test="record.estimateMinutes != null">
                estimate_minutes = #{record.estimateMinutes,jdbcType=TINYINT},
            </if>
            <if test="record.price != null">
                price = #{record.price,jdbcType=DECIMAL},
            </if>
            <if test="record.orgPrice != null">
                org_price = #{record.orgPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.image != null">
                image = #{record.image,jdbcType=VARCHAR},
            </if>
            <if test="record.isNeedSex != null">
                is_need_sex = #{record.isNeedSex,jdbcType=TINYINT},
            </if>
            <if test="record.testedCnt != null">
                tested_cnt = #{record.testedCnt,jdbcType=INTEGER},
            </if>
            <if test="record.resultTemplate != null">
                result_template = #{record.resultTemplate,jdbcType=VARCHAR},
            </if>
            <if test="record.isHot != null">
                is_hot = #{record.isHot,jdbcType=TINYINT},
            </if>
            <if test="record.isNew != null">
                is_new = #{record.isNew,jdbcType=TINYINT},
            </if>
            <if test="record.isSuper != null">
                is_super = #{record.isSuper,jdbcType=TINYINT},
            </if>
            <if test="record.resultTemplateParam != null">
                result_template_param = #{record.resultTemplateParam,jdbcType=VARCHAR},
            </if>
            <if test="record.description != null">
                description = #{record.description,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update survey
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        create_by = #{record.createBy,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        class_id = #{record.classId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=TINYINT},
        question_cnt = #{record.questionCnt,jdbcType=INTEGER},
        estimate_minutes = #{record.estimateMinutes,jdbcType=TINYINT},
        price = #{record.price,jdbcType=DECIMAL},
        org_price = #{record.orgPrice,jdbcType=DECIMAL},
        image = #{record.image,jdbcType=VARCHAR},
        is_need_sex = #{record.isNeedSex,jdbcType=TINYINT},
        tested_cnt = #{record.testedCnt,jdbcType=INTEGER},
        result_template = #{record.resultTemplate,jdbcType=VARCHAR},
        is_hot = #{record.isHot,jdbcType=TINYINT},
        is_new = #{record.isNew,jdbcType=TINYINT},
        is_super = #{record.isSuper,jdbcType=TINYINT},
        result_template_param = #{record.resultTemplateParam,jdbcType=VARCHAR},
        description = #{record.description,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update survey
        set id = #{record.id,jdbcType=INTEGER},
        title = #{record.title,jdbcType=VARCHAR},
        create_by = #{record.createBy,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        class_id = #{record.classId,jdbcType=INTEGER},
        status = #{record.status,jdbcType=TINYINT},
        question_cnt = #{record.questionCnt,jdbcType=INTEGER},
        estimate_minutes = #{record.estimateMinutes,jdbcType=TINYINT},
        price = #{record.price,jdbcType=DECIMAL},
        org_price = #{record.orgPrice,jdbcType=DECIMAL},
        image = #{record.image,jdbcType=VARCHAR},
        is_need_sex = #{record.isNeedSex,jdbcType=TINYINT},
        tested_cnt = #{record.testedCnt,jdbcType=INTEGER},
        result_template = #{record.resultTemplate,jdbcType=VARCHAR},
        is_hot = #{record.isHot,jdbcType=TINYINT},
        is_new = #{record.isNew,jdbcType=TINYINT},
        is_super = #{record.isSuper,jdbcType=TINYINT},
        result_template_param = #{record.resultTemplateParam,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ronmob.qz.model.Survey">
        update survey
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="questionCnt != null">
                question_cnt = #{questionCnt,jdbcType=INTEGER},
            </if>
            <if test="estimateMinutes != null">
                estimate_minutes = #{estimateMinutes,jdbcType=TINYINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="orgPrice != null">
                org_price = #{orgPrice,jdbcType=DECIMAL},
            </if>
            <if test="image != null">
                image = #{image,jdbcType=VARCHAR},
            </if>
            <if test="isNeedSex != null">
                is_need_sex = #{isNeedSex,jdbcType=TINYINT},
            </if>
            <if test="testedCnt != null">
                tested_cnt = #{testedCnt,jdbcType=INTEGER},
            </if>
            <if test="resultTemplate != null">
                result_template = #{resultTemplate,jdbcType=VARCHAR},
            </if>
            <if test="isHot != null">
                is_hot = #{isHot,jdbcType=TINYINT},
            </if>
            <if test="isNew != null">
                is_new = #{isNew,jdbcType=TINYINT},
            </if>
            <if test="isSuper != null">
                is_super = #{isSuper,jdbcType=TINYINT},
            </if>
            <if test="resultTemplateParam != null">
                result_template_param = #{resultTemplateParam,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ronmob.qz.model.Survey">
    update survey
    set title = #{title,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      class_id = #{classId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      question_cnt = #{questionCnt,jdbcType=INTEGER},
      estimate_minutes = #{estimateMinutes,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      org_price = #{orgPrice,jdbcType=DECIMAL},
      image = #{image,jdbcType=VARCHAR},
      is_need_sex = #{isNeedSex,jdbcType=TINYINT},
      tested_cnt = #{testedCnt,jdbcType=INTEGER},
      result_template = #{resultTemplate,jdbcType=VARCHAR},
      is_hot = #{isHot,jdbcType=TINYINT},
      is_new = #{isNew,jdbcType=TINYINT},
      is_super = #{isSuper,jdbcType=TINYINT},
      result_template_param = #{resultTemplateParam,jdbcType=VARCHAR},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.ronmob.qz.model.Survey">
    update survey
    set title = #{title,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      class_id = #{classId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      question_cnt = #{questionCnt,jdbcType=INTEGER},
      estimate_minutes = #{estimateMinutes,jdbcType=TINYINT},
      price = #{price,jdbcType=DECIMAL},
      org_price = #{orgPrice,jdbcType=DECIMAL},
      image = #{image,jdbcType=VARCHAR},
      is_need_sex = #{isNeedSex,jdbcType=TINYINT},
      tested_cnt = #{testedCnt,jdbcType=INTEGER},
      result_template = #{resultTemplate,jdbcType=VARCHAR},
      is_hot = #{isHot,jdbcType=TINYINT},
      is_new = #{isNew,jdbcType=TINYINT},
      is_super = #{isSuper,jdbcType=TINYINT},
      result_template_param = #{resultTemplateParam,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>